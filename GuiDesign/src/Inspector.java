import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

// Todo: Create TableModel es general as possible.
public class Inspector
{
	public static void main( String[] args )
	{
		new Inspector().show();
	}

	void show()
	{
		frame = new JFrame( "Inspector" );
		frame.setContentPane( notNeeded );
		ImageIcon icon = new ImageIcon( getClass().getResource( "/SmallJIcon.png" ) );
		frame.setIconImage( icon.getImage() );
		frame.pack();
		frame.setLocationRelativeTo( null );
		frame.setVisible( true );
	}

	JFrame frame;
	JPanel notNeeded;
	JTable variablesTable;
	JScrollPane variablesScrollPane;
	private JLabel stringLabel;
	private JTextField stringTextField;
	private JTabbedPane objectsTabbedPane;
	private JPanel objectPanel;
	private JPanel stringPanel;
	private JButton closeButton;

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$()
	{
		createUIComponents();
		notNeeded = new JPanel();
		notNeeded.setLayout( new BorderLayout( 0, 0 ) );
		objectsTabbedPane = new JTabbedPane();
		notNeeded.add( objectsTabbedPane, BorderLayout.CENTER );
		objectPanel = new JPanel();
		objectPanel.setLayout( new BorderLayout( 0, 4 ) );
		objectsTabbedPane.addTab( "Color", objectPanel );
		objectPanel.setBorder( BorderFactory.createTitledBorder( BorderFactory.createEmptyBorder( 4, 4, 4, 4 ), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null ) );
		variablesScrollPane = new JScrollPane();
		objectPanel.add( variablesScrollPane, BorderLayout.CENTER );
		variablesTable.setName( "variablesTable" );
		variablesScrollPane.setViewportView( variablesTable );
		stringPanel = new JPanel();
		stringPanel.setLayout( new BorderLayout( 4, 0 ) );
		objectPanel.add( stringPanel, BorderLayout.NORTH );
		stringLabel = new JLabel();
		stringLabel.setHorizontalAlignment( 2 );
		stringLabel.setText( "String" );
		stringPanel.add( stringLabel, BorderLayout.WEST );
		stringTextField = new JTextField();
		stringTextField.setEditable( false );
		stringTextField.setText( "Color: [ 1, 22, 255 ]" );
		stringPanel.add( stringTextField, BorderLayout.CENTER );
		closeButton = new JButton();
		closeButton.setText( "x" );
		stringPanel.add( closeButton, BorderLayout.EAST );
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$()
	{
		return notNeeded;
	}

	private void createUIComponents()
	{
		String[] columns = { "Variable", "Value" };
		String[][] rows = { { "red", "1" }, { "green", "22" }, { "blue", "255" } };

		// variablesTable = new JTable( rows, columns );

		DefaultTableModel tableModel = new DefaultTableModel();

		tableModel.addColumn( columns[ 0 ] );
		tableModel.addColumn( columns[ 1 ] );

		for( String[] row : rows ) {
			tableModel.addRow( row );
		}

		variablesTable = new JTable( tableModel );
		variablesTable.setDefaultEditor( Object.class, null );

		variablesTable.addMouseListener( new MouseAdapter()
		{
			public void mouseClicked( MouseEvent mouseEvent )
			{
				onTableClicked( mouseEvent );
			}
		} );
	}

	void onTableClicked( MouseEvent mouseEvent )
	{
		if( mouseEvent.getClickCount() != 2 )  // to detect double click events
			return;

		int row = variablesTable.getSelectedRow();
		int column = variablesTable.getSelectedColumn();
		Object string = variablesTable.getValueAt( row, column );
		JOptionPane.showMessageDialog( null, string );
	}
}
